{"version":3,"sources":["components/PageNavLink.tsx","components/NavBar.tsx","components/HomePage.tsx","components/PageNotFound.tsx","api.ts","components/Loader/Loader.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","NavBar","role","HomePage","PageNotFound","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeopleTable","people","slug","getPeopleParents","parentName","parent","find","person","name","classnames","sex","map","born","died","motherName","fatherName","PeoplePage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","getPeopleFromServer","peopleFromServer","useEffect","length","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"4QASaA,EAA+B,SAAC,GAGtC,IAFLC,EAEI,EAFJA,GACAC,EACI,EADJA,MAEA,OACE,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CACE,8BAA+BD,GAHxB,EAMXH,GAAIA,EAPN,SASGC,GAGN,ECvBYI,EAAmB,WAC9B,OACE,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UAEE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAE1B,cAAC,EAAD,CAAaD,GAAG,UAAUC,MAAM,iBAMzC,ECpBYM,EAAqB,WAChC,OACE,oBAAIL,UAAU,QAAd,sBAEH,ECJYM,EAAyB,WACpC,OACE,oBAAIN,UAAU,QAAd,2BAEH,E,sBCGM,SAASO,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKhB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECQTiB,EAA+B,SAAC,GAGtC,IAFLC,EAEI,EAFJA,OACAC,EACI,EADJA,KAEMC,EAAmB,SAACC,GACxB,IAAMC,EAASJ,EAAOK,MAAK,SAAAC,GAAM,OAAIA,EAAOC,OAASJ,CAApB,IAEjC,OAAOC,EAEH,cAAC,IAAD,CACExB,GAAE,kBAAawB,EAAOH,MACtBnB,UAAW0B,IACT,CACE,kBAAkC,MAAfJ,EAAOK,MAJhC,SAQGL,EAAOG,OAGVJ,GAAc,GACnB,EAED,OACE,wBACE,UAAQ,cACRrB,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGkB,EAAOU,KAAI,SAAAJ,GAAM,OAChB,qBACE,UAAQ,SAERxB,UAAW0B,IACT,CACE,yBAA0BP,IAASK,EAAOL,OALhD,UASE,6BACE,cAAC,IAAD,CACErB,GAAE,kBAAa0B,EAAOL,MACtBnB,UAAW0B,IACT,CACE,kBAAkC,MAAfF,EAAOG,MAJhC,SAQGH,EAAOC,SAIZ,6BAAKD,EAAOG,MACZ,6BAAKH,EAAOK,OACZ,6BAAKL,EAAOM,OACZ,6BAAKV,EAAiBI,EAAOO,cAC7B,6BAAKX,EAAiBI,EAAOQ,gBAxBxBR,EAAOL,KAHE,QAiCzB,EC5EYc,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOhB,EAAP,KAAeiB,EAAf,KACA,EAAkCD,oBAAS,GAA3C,mBAAOE,EAAP,KAAkBC,EAAlB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACQpB,EAASqB,cAATrB,KAEFsB,EAAmB,iDAAG,uHAEOlC,IAFP,OAElBmC,EAFkB,OAIxBP,EAAUO,GAJc,gDAMxBH,GAAW,GANa,yBAQxBF,GAAa,GARW,4EAAH,qDAgBzB,OAJAM,qBAAU,WACRF,GACD,GAAE,IAGD,qCACE,oBAAIzC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UAEGoC,GACC,cAAC,EAAD,IAGDE,GACC,mBAAG,UAAQ,qBAAqBtC,UAAU,kBAA1C,mCAKCkB,EAAO0B,SAAWN,IAAYF,GAC/B,mBAAG,UAAQ,kBAAX,gDAKDlB,EAAO0B,QAAWR,GAAcE,EAM1B,6BAJH,cAAC,EAAD,CACEpB,OAAQA,EACRC,KAAMA,WAQrB,ECxDY0B,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UAEE,cAAC,EAAD,IAEA,sBAAM7C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SAEE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO8C,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOF,KAAK,QAAQE,QAAS,cAAC,EAAD,SAE/B,cAAC,IAAD,CAAOF,KAAK,IAAIE,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOF,KAAK,OAAOE,QAAS,cAAC,IAAD,CAAUlD,GAAG,IAAImD,SAAO,MACpD,cAAC,IAAD,CAAOH,KAAK,IAAIE,QAAS,cAAC,EAAD,eAfhB,ECAnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.354ee8bb.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string,\n  title: string,\n};\n\nexport const PageNavLink: React.FC<Props> = ({\n  to,\n  title,\n}) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        {\n          'has-background-grey-lighter': isActive,\n        },\n      )}\n      to={to}\n    >\n      {title}\n    </NavLink>\n  );\n};\n","import React from 'react';\nimport { PageNavLink } from './PageNavLink';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n\n          <PageNavLink to=\"/\" title=\"Home\" />\n\n          <PageNavLink to=\"/people\" title=\"People\" />\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classnames from 'classnames';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  people: Person[],\n  slug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  slug,\n}) => {\n  const getPeopleParents = (parentName: string | null) => {\n    const parent = people.find(person => person.name === parentName);\n\n    return parent\n      ? (\n        <Link\n          to={`/people/${parent.slug}`}\n          className={classnames(\n            {\n              'has-text-danger': parent.sex === 'f',\n            },\n          )}\n        >\n          {parent.name}\n        </Link>\n      )\n      : parentName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <tr\n            data-cy=\"person\"\n            key={person.slug}\n            className={classnames(\n              {\n                'has-background-warning': slug === person.slug,\n              },\n            )}\n          >\n            <td>\n              <Link\n                to={`/people/${person.slug}`}\n                className={classnames(\n                  {\n                    'has-text-danger': person.sex === 'f',\n                  },\n                )}\n              >\n                {person.name}\n              </Link>\n            </td>\n\n            <td>{person.sex}</td>\n            <td>{person.born}</td>\n            <td>{person.died}</td>\n            <td>{getPeopleParents(person.motherName)}</td>\n            <td>{getPeopleParents(person.fatherName)}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isError, setIsError] = useState(false);\n  const { slug } = useParams();\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n    } catch {\n      setIsError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {(!people.length && !isError && !isLoading) && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {people.length && !isLoading && !isError\n            ? (\n              <PeopleTable\n                people={people}\n                slug={slug}\n              />\n            ) : (<></>)}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { NavBar } from './components/NavBar';\n\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n\n    <NavBar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"*\" element={<PageNotFound />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}